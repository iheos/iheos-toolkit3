package gov.nist.hit.ds.repository.simple;

import gov.nist.hit.ds.repository.api.ArtifactId;
import gov.nist.hit.ds.repository.api.Parameter;
import gov.nist.hit.ds.repository.api.RepositoryException;
import gov.nist.hit.ds.utilities.other.UuidAllocator;

public class IdFactory {

    /**
     * Gets an automatically generated Id.
     * @return
     */
	public ArtifactId getNewId() {
		String id = UuidAllocator.allocate();
		String[] parts = id.split(":");
		id = parts[2];
		//		id = id.replaceAll("-", "_");

		SimpleId uuId = new SimpleId(id);
		uuId.setAutoGenerated(true);

		return uuId;
	}

    /**
     * Gets an automatically generated Id, which is unique across the repository, along with a user friendly name, which may not be unique in all cases (useful within a parent scope).
     * @param name
     * @return
     */
    public ArtifactId getNewId(String name) throws RepositoryException {
        Parameter p = new Parameter("name");
        p.assertNotNull(p);

        SimpleId id = (SimpleId)getNewId();
        id.setAutoGenerated(false);
        id.setUserFriendlyName(name);
        return id;
    }
}
